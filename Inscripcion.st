Object subclass: #Alumno	instanceVariableNames: 'padron genero'	classVariableNames: ''	package: 'Inscripcion'!!Alumno methodsFor: 'accessing' stamp: 'DS 10/7/2021 21:18'!initialize 	genero := #O! !!Alumno methodsFor: 'accessing' stamp: 'DS 10/7/2021 20:07'!padron	^ padron! !!Alumno methodsFor: 'accessing' stamp: 'DS 10/7/2021 21:16'!genero	^ genero! !!Alumno methodsFor: 'as yet unclassified' stamp: 'DS 10/7/2021 20:14'!sos: unPadron 	^padron asString asUppercase = (unPadron asString asUppercase)! !!Alumno methodsFor: 'as yet unclassified' stamp: 'DS 10/7/2021 21:25'!mismoGeneroQue: otroAlumno 	^genero = (otroAlumno genero) ! !!Alumno methodsFor: 'as yet unclassified' stamp: 'DS 10/7/2021 20:52'!padron: unPadron genero: unGenero 	padron := unPadron.	genero := unGenero.	! !!Alumno methodsFor: 'as yet unclassified' stamp: 'DS 10/7/2021 20:05'!padron: unPadron	padron := unPadron! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Alumno class	instanceVariableNames: ''!!Alumno class methodsFor: 'as yet unclassified' stamp: 'DS 10/7/2021 20:05'!padron: unPadron	|result|	result := self new.	result padron: unPadron .	^result.! !!Alumno class methodsFor: 'as yet unclassified' stamp: 'DS 10/7/2021 20:51'!padron: unPadron genero: unGenero 	|result|	result := self new.	result padron: unPadron genero: unGenero .	^result.! !Error subclass: #CupoGeneroExcedido	instanceVariableNames: ''	classVariableNames: ''	package: 'Inscripcion'!Error subclass: #CupoSobrepasado	instanceVariableNames: ''	classVariableNames: ''	package: 'Inscripcion'!Object subclass: #Materia	instanceVariableNames: 'cupos alumnos cupoO cupoH cupoM'	classVariableNames: ''	package: 'Inscripcion'!!Materia methodsFor: 'as yet unclassified' stamp: 'DS 10/7/2021 21:59'!verificarCupo: otroAlumno 	| verificacion |	(cupos = 1) ifTrue: [		^self. 	].	verificacion := self verificacionPorGenero: otroAlumno.	[			verificacion ejecutar: (self alumnosConGeneroX: otroAlumno).			] on: CupoSobrepasado do: [			CupoGeneroExcedido signal.	]! !!Materia methodsFor: 'as yet unclassified' stamp: 'DS 10/7/2021 19:39'!hayCupo	^(cupos < (alumnos size))! !!Materia methodsFor: 'as yet unclassified' stamp: 'DS 10/7/2021 21:41'!alumnosConGeneroX: otroAlumno 	^alumnos count: [ :a | 		a mismoGeneroQue: otroAlumno  	].! !!Materia methodsFor: 'as yet unclassified' stamp: 'DS 10/7/2021 21:48'!verificacionPorGenero: unAlumno	|unGenero|	unGenero := unAlumno genero. 	(unGenero = #O) ifTrue: [ ^VerificanCupo valor: cupoO  ].	(unGenero = #H) ifTrue: [ ^VerificanCupo valor: cupoH  ].	(unGenero = #M) ifTrue: [ ^VerificanCupo valor: cupoM  ].! !!Materia methodsFor: 'as yet unclassified' stamp: 'DS 10/7/2021 21:58'!inscribir: anAlumno 	self verificarCupo: anAlumno.	self verificarCupoTotal.	alumnos add: anAlumno .! !!Materia methodsFor: 'as yet unclassified' stamp: 'DS 10/7/2021 20:22'!alumnoPorPadron: unPadron 	^alumnos detect: [ :a | a sos: unPadron] ifNone: [ NoExisteAlumno signal ].! !!Materia methodsFor: 'as yet unclassified' stamp: 'DS 10/7/2021 20:13'!alumnoPorPadronViolaOcultamientoInfo: unPadron 	^alumnos detect: [ :a | a padron = unPadron]! !!Materia methodsFor: 'as yet unclassified' stamp: 'DS 10/7/2021 20:58'!cupo: unNumeroAlumnos 	cupos := unNumeroAlumnos .	cupoO := unNumeroAlumnos / 3.	cupoH := unNumeroAlumnos / 3.	cupoM := unNumeroAlumnos / 3.! !!Materia methodsFor: 'as yet unclassified' stamp: 'DS 10/7/2021 21:50'!verificarCupoTotal	(VerificanCupo valor: cupos) ejecutar: (alumnos size).! !!Materia methodsFor: 'as yet unclassified' stamp: 'DS 10/7/2021 19:34'!initialize 	alumnos := OrderedCollection new.! !!Materia methodsFor: 'as yet unclassified' stamp: 'DS 10/7/2021 19:23'!inscriptos	^1.! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Materia class	instanceVariableNames: ''!!Materia class methodsFor: 'as yet unclassified' stamp: 'DS 10/7/2021 19:22'!cupo: unNumeroAlumnos 	|result|	result := self new.	result cupo: unNumeroAlumnos .	^result.! !Error subclass: #NoExisteAlumno	instanceVariableNames: ''	classVariableNames: ''	package: 'Inscripcion'!Object subclass: #VerificanCupo	instanceVariableNames: 'cota'	classVariableNames: ''	package: 'Inscripcion'!!VerificanCupo methodsFor: 'as yet unclassified' stamp: 'DS 10/7/2021 21:34'!valor: unaCotaMaxima 	cota := unaCotaMaxima .! !!VerificanCupo methodsFor: 'as yet unclassified' stamp: 'DS 10/7/2021 22:03'!ejecutar: unValor 	(cota = unValor ) ifTrue: [ 		CupoSobrepasado  signal .	].! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!VerificanCupo class	instanceVariableNames: ''!!VerificanCupo class methodsFor: 'as yet unclassified' stamp: 'DS 10/7/2021 21:34'!valor: unaCotaMaxima 	|result|	result := self new.	result valor: unaCotaMaxima.	^result.! !